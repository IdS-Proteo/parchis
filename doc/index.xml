<documentation>
    <class name="TestBoard" superclass="MiniTest::Test">
        <summary>this is a test push to trigger jenkins.</summary>
        <description>
            <![CDATA[
<p>this is a test push to trigger jenkins</p>
]]>
        </description>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testboard.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_assign_color_to_players" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testboard.test_assign_color_to_players -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_assign_tokens_to_players" scope="instance">
            <summary>end.</summary>
            <overloads>
                <overload>
                    <signature>testboard.test_assign_tokens_to_players -&gt; Object </signature>
                    <description>
&lt;p&gt;end&lt;/p&gt;
</description>
                </overload>
            </overloads>
        </method>
        <method name="test_initialize_cells" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testboard.test_initialize_cells -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_next_turn" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testboard.test_next_turn -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_player_turn" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testboard.test_player_turn -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestCell" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testcell.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_empty?" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testcell.test_empty? -&gt; Boolean </signature>
                    <description></description>
                    <returns>
                        <types>
                            <type>Boolean</type>
                        </types>
                        <description>
                            <![CDATA[]]>
                        </description>
                    </returns>
                </overload>
            </overloads>
        </method>
        <method name="test_get_length_coords" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testcell.test_get_length_coords -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_place_token" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testcell.test_place_token -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestDice" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testdice.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_set_unknown_state" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testdice.test_set_unknown_state -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestGameStateUpdater" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
    </class>
    <class name="TestHTTPClient" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_get_lobby_state" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.test_get_lobby_state -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_get_match_lobby_existence" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.test_get_match_lobby_existence -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_get_new_match_id" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.test_get_new_match_id -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_get_player_turn" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.test_get_player_turn -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_post_joining_to_lobby" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.test_post_joining_to_lobby -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_post_leaving_lobby" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.test_post_leaving_lobby -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_post_match" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.test_post_match -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_post_match_quit" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.test_post_match_quit -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_post_match_started" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testhttpclient.test_post_match_started -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestLobbyUpdater" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <constant name="UPDATE_INTERVAL" value="2.5">
            <description>
                <![CDATA[]]>
            </description>
        </constant>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testlobbyupdater.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_join_lobby" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testlobbyupdater.test_join_lobby -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_leave_lobby" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testlobbyupdater.test_leave_lobby -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_update" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testlobbyupdater.test_update -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestParchis" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <method name="initialize_phase_3" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.initialize_phase_3 -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_capture_name" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_capture_name -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_draw -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw_cells_contents" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_draw_cells_contents -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw_phase_1" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_draw_phase_1 -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw_phase_2" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_draw_phase_2 -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw_phase_3" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_draw_phase_3 -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw_token" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_draw_token -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_enqueue_error" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_enqueue_error -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_initialize_phase_2" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_initialize_phase_2 -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_initialize_view" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_initialize_view -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_reset_to_phase_1" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_reset_to_phase_1 -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_update" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testparchis.test_update -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestPlayer" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testplayer.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_can_roll_dice?" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testplayer.test_can_roll_dice? -&gt; Boolean </signature>
                    <description></description>
                    <returns>
                        <types>
                            <type>Boolean</type>
                        </types>
                        <description>
                            <![CDATA[]]>
                        </description>
                    </returns>
                </overload>
            </overloads>
        </method>
        <method name="test_to_s" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testplayer.test_to_s -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestSevenFacesDice" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testsevenfacesdice.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_roll" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testsevenfacesdice.test_roll -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestSixFacesDice" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testsixfacesdice.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_roll" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testsixfacesdice.test_roll -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestToken" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
    </class>
    <class name="TestVActions" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <method name="setup" scope="instance">
            <summary>nothing to test for now, it just writes text in a position.</summary>
            <overloads>
                <overload>
                    <signature>testvactions.setup -&gt; Object </signature>
                    <description>
&lt;p&gt;nothing to test for now, it just writes text in a position&lt;/p&gt;
</description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testvactions.test_draw -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestVCountdown" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <constant name="TURN_TIMEOUT" value="120">
            <description>
                <![CDATA[]]>
            </description>
        </constant>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testvcountdown.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testvcountdown.test_draw -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestVCurrentTurn" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <method name="setup" scope="instance">
            <summary>idk how to test this but it runs.</summary>
            <overloads>
                <overload>
                    <signature>testvcurrentturn.setup -&gt; Object </signature>
                    <description>
&lt;p&gt;idk how to test this but it runs&lt;/p&gt;
</description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testvcurrentturn.test_draw -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestVStats" superclass="MiniTest::Test">
        <summary>also nothing in class yet but it works.</summary>
        <description>
            <![CDATA[
<p>also nothing in class yet but it works</p>
]]>
        </description>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testvstats.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_draw" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testvstats.test_draw -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestVTips" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
        <constant name="HOLD_TIP" value="5">
            <description>
                <![CDATA[]]>
            </description>
        </constant>
        <constant name="TIPS" value="['Cuando sea tu turno, arrojás tu dado pulsando [Spacebar].',&#13;&#10;'Si te sacás un 6, tenés un segundo turno.',&#13;&#10;'Con un 5, podés sacar una ficha a la salida de tu casa.',&#13;&#10;'2 fichas de igual color en un casillero forman una barrera.',&#13;&#10;'La barrera se rompe si el dueño saca un 6 o tiene 2 fichas.',&#13;&#10;'Llegás a la meta con número exacto o rebotás.',&#13;&#10;'Al llegar a la meta, o ganaste o avanzás 10 con otra ficha.',&#13;&#10;'Podés elegir fichas con las teclas A-B-C-D en tu teclado.',&#13;&#10;'Si te encontrás con una barrera, no podés avanzar.',&#13;&#10;'Una ficha come a otra de otro color si llega al mismo lugar.'].freeze">
            <description>
                <![CDATA[]]>
            </description>
        </constant>
        <method name="setup" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testvtips.setup -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
        <method name="test_update" scope="instance">
            <summary></summary>
            <overloads>
                <overload>
                    <signature>testvtips.test_update -&gt; Object </signature>
                    <description></description>
                </overload>
            </overloads>
        </method>
    </class>
    <class name="TestVWidget" superclass="MiniTest::Test">
        <summary></summary>
        <description>
            <![CDATA[]]>
        </description>
    </class>
</documentation>
